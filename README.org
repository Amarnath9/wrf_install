[NOTE: This file is written in Emacs [[http://orgmode.org][orgmode]] markeup. If you are not
familiar with it and trouble reading this please see
https://github.com/yyr/wrf_install/#readme page.]

wrf_install is collection of shell scripts to automate the processing
of downloading and building wrf model and its dependencies on veriety of
machines with different compilers.

website: https://github.com/yyr/wrf_install

* Introduction
Building WRF model is tedious. wrf_install is a collection of shell
scripts(to be precise bash shell) to automate the downloading and
building process. wrf_install is first started by Rick Morgans so thanks Rick.

* How to use?
** Quick read
start with sourcing the SOURCEME file. By default building process
takes place in "~/wrf" directory. Edit that file if you want to change
the location of the installation(WRF_BASE variable). Set the compiler
Option as well and source that file.

: source SOURCEME               # it also spits some useful information, read it
: ./download_app.sh all

So now all the needed apps are downloaded and extracted. Check
"~/wrf/src" folder.

And go to the ~build~ directory. Start building the each by calling
individual ~.sh~ file or to install all at once call ~ALL.sh~

: cd build
: ./ALL.sh

** Little walk through
To test how it works.. lets try to install one component.

Open the ~SOURCEME~ file with your editor.

Customize:
- WRF_BASE variable. i.e., Directory in which downloads/installation should take
  place. By default it is "~/wrf".
- Which compilers you want to use. Again by default it is gnu gcc.  if
  you have intel instead of Gnu gcc compilers. change them accordingly
  (There are comments in that file,it must be easy).

Okay now lets go to the action part. Lets download and build ~zlib~.

#+begin_src sh
source SOURCEME # this is where you start
./download_app.sh ZLIB # download zlib and decompress it
cd build # goto the directory where build scripts are located
./ZLIB.sh
#+end_src

That's it.. If everything goes well you have just downloaded and built
& installed ~zlib~. See in the $WRF_BASE/$compiler directory.

I strongly *suggest* you to install the components one by one for the first
time around. So its easy for you to see what is going on and
understand how wrf_install work.

The following list of components you can install right now.(each one
has its ~APP.sh~ file in the ~build~ directory)

- zlib
- szip
- jpeg
- jasper
- hdf5
- udunits2
- netcdf4
- ncview
- mpich
- wrf
- wps

* How it works?
wrf_install is meant to bring consistency in setting up environment
variables. When ~SOURCEME~ file is sourced, it will set WRF_BASE
variable and compiler options. The sourcing also gives you feedback
how to change these compiler options.

Each app has env file which contains few properties(eg., /url/ from
where that app can be downloaded) of that app. for eg., zlib app has a
file called ~ZLIB.env~ in the ~apps~ directory.

In the same way each app has a file named ~APP.sh~ in build directory
which takes care of installation process while learning about its'
properties from env file and its dependencies' env files. luckily all
apps of WRF depend upon are built by GNU utilities autoconf, configure #
and make. So almost no manual interventions are needed.

Finally building WRF/WPS is tricky because these won't use make
directly. So some compiler options and path need to change and may
need to change ~configure.wrf~ file depend on the machine you are
working on. For this also we have oneline perl scripts. For example
see the gcc folder there is ~fix.configure.wrf~ file.

* How to customize then?
** Compiler options
As it is said in the previous section when you source the ~SOURCEME~ file
it invokes ~compiler.env~ to get compiler setting.  for gcc you need
to customize ~$scripts_dir/gcc/compiler.env~ file.

** Configure options
Build directory contains individual build scripts. customize them
accordingly.

** wrf & wps
Selection of different build options for wrf/wps configure script is
automated by feeding configure.wrf.gcc.select to the stdin. so
customize them to your need, they also live in the ~build~
directory. by default serial built is configured.  also read the
comments in the ~WRF.sh~ and ~WPS.sh~ files

* Compilers supported by wrf_install
For now gcc and intel. xl and pgf will be supported in the later
versions of wrf_install.

| Compiler | system  | state   | remarks                |
|----------+---------+---------+------------------------|
| gcc      | linux   | works   | may need minor changes |
| intel    | linux   | works   | may need minor changes |
| pgf      | linux   | not yet | need to implement      |
| xl       | Ibm aix | not yet | need to implement      |

* FAQ
check ~faq.org~ file in ~doc~ folder

* Contributing
Any patches/reports/suggestions are most welcome. Drop [[mailto:yagenshâ—Žlive.com][me]] a mail (replace
unicode character) or preferably report on github [[https://github.com/yyr/wrf_install/issues][issues]] page.

* TODOs
Check dev.org file
