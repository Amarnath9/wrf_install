# -*- mode: org; -*-
[this file is written in orgmode markeup]

wrf_install is collection of shell scripts to automate the processing
of downloading and building wrf model and its dependencies on veriety of
machines with different compilers.

Website: https://github.com/yyr/wrf_install

* Introduction
Building wrf model is tedious. These are bunch of shell scripts to
automate the downloading and building process. these scripts are very
much workable state. This is first written by Rick Morgans.

* How to Use
** quick read
start with sourcing the SOURCEME file. By default building process
will be in ~ ~/wrf ~ directory. Edit this if you want to change
the location of the building. set the compiler option aswell.
and source the file.

: source SOURCEME

once this is done.  download and extract all the packages we need by
calling the script ~download_app.sh~

: ./download_app.sh ALL

the packages are downloaded and extracted in ~/wrf/src directory.

and go to the build directory. start building the each by calling
individual ~.sh~ file or to install all at once call ~ALL.sh~

: cd build
: ./ALL.sh

** little walk through
To test how it works..

try to install one component.. Follow these steps.

open the SOURCEME file with your editor
you may want to customize these options;
- Directory where installation should take place. (WRF_BASE variable)

By default "~/wrf" is the folder all the downloads and installation
takes place.

- which compilers you want to use.

By default it is GNU gcc.  If you have intel instead of GNU gcc
compilers. change them accordingly (there is an example how to set,
it must be easy).

OKAY now lets try to install ~zlib~ first

#+BEGIN_SRC sh
. SOURCEME # this is where you start
./download_app.sh ZLIB # download zlib and decompress it
cd build # goto the directory where build scripts are located
./ZLIB.sh
#+END_SRC

that's it..
If everything goes well you have just built and installed ~zlib~. see
in the $WRF_BASE/$compiler directory.

I strongly *suggest* you to install the components one by one for the first
time around. So its easy for you to see what is going on and
understand how these script work.

these are the components you can install.(each one has its ?.sh file
in the build directory)

- ZLIB
- SZIP
- JPEG
- JASPER
- HDF5
- UDUNITS2
- NETCDF4
- NCVIEW
- MPICH
- WRF
- WPS

* How it works
Whole these script are meant to bring consistency in setting up
environment variables. When ~SOURCEME~ file is sourced, it will set
WRF_BASE variable and compiler options. (see the ~compiler~ directory
to modify the compiler options)

Each app has env file which contains few properties(eg., /URL/ from
where that app can be downloaded) of that APP. FOR eg., zlib app has a
file called ~ZLIB.env~.

In the same way each app has a file named ~APP.sh~ in build directory
which takes care of installation process while learning about its
properties from env file and its dependencies env files. Luckily all
dependency apps are built by GNU utilities autoconf, configure and make. So
almost no manual interventions are needed.

Finally building WRF/WPS app is tricky because these won't use make
directly. So some compiler options and path need to change.

* Compilers supported by wrf_install
for now gcc and intel.

These compilers are available for me at school. So I could test them.

| compiler | system  | state   | remarks                |
|----------+---------+---------+------------------------|
| gcc      | linux   | works   | may need minor changes |
| intel    | linux   | works   | may need minor changes |
| XL       | ibm aix | not yet | need to implement      |

* FAQ
check ~faq.org~ file in ~doc~ folder

* Contributing
I welcome any patches/reports/suggestions. Drop [[mailto:yagenshâ—Žlive.com][me]] a mail (replace
Unicode character) or report on github repository.

https://github.com/yyr/wrf_install/issues

please report any problems or

* TODO Next
- resolving dependencies
- support more compiler and OS
- customized set of dependencies installation
